/*Given two strings A and B, find if A is a subsequence of B.

Input:
The first line of input contains an integer T denoting the no of test cases. Then T test cases follow. Each test case contains two space separated strings A and B.

Output:
For each test case, in a new line, print 1 if a is sub-sequences of b else print 0.

Constraints:
1 <= T <= 900
1<= |A|,|B| <=104

Example:
Input:
2
AXY YADXCP
gksrek geeksforgeeks

Output:
0
1
*/

//code:

#include <iostream>
using namespace std;

int main() {
	long int t;
	cin>>t;
	while(t--)
	{
	    string str,q;
	    cin>>str>>q;
	    if(str.length()==q.length() && (str+str).find(q)!=string::npos)
	    cout<<"1"<<endl;
	    else
	    cout<<"0"<<endl;
	}
	return 0;
}
